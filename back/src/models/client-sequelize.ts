import { Sequelize } from "sequelize";
import "dotenv/config";

// Initialise une instance de Sequelize pour la connexion √† la base de donn√©es PostgreSQL
const sequelize = new Sequelize(process.env.DATABASE_URL as string, {
  define: {
    underscored: true, // Utilise des noms de colonnes en snake_case
    timestamps: true, // Active les colonnes de timestamp (createdAt, updatedAt)
  },
  dialect: "postgres", // Sp√©cifie le dialecte PostgreSQL
  logging: false, // D√©sactive les logs SQL dans la console
});

export { sequelize };

/**
 * Fonction IIFE (Immediately Invoked Function Expression) pour tester la connexion √† PostgreSQL
 * et synchroniser les mod√®les avec la base de donn√©es.
 */
(async () => {
  try {
    // Teste la connexion √† la base de donn√©es
    await sequelize.authenticate();
    console.log("‚úÖ Connexion √† PostgreSQL r√©ussie !");

    // Synchronise les mod√®les d√©finis avec la base de donn√©es
    // L'option `alter: true` modifie les tables pour correspondre aux mod√®les d√©finis
    await sequelize.sync({ force: true });
    console.log("üß± Base synchronis√©e !");
  } catch (error) {
    // Affiche une erreur si la connexion ou la synchronisation √©choue
    console.error("‚ùå Erreur connexion DB :", error);
  }
})();
